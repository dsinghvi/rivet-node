/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { RivetRivet } from "@fern-api/rivet";
import * as core from "../../../../../../core";

export const ListActivitiesOutput: core.schemas.ObjectSchema<
  serializers.identity.ListActivitiesOutput.Raw,
  RivetRivet.identity.ListActivitiesOutput
> = core.schemas.object({
  identities: core.schemas.list(
    core.schemas.lazyObject(async () => (await import("../../../../..")).commons.IdentityHandle)
  ),
  games: core.schemas.list(core.schemas.lazyObject(async () => (await import("../../../../..")).commons.GameSummary)),
  parties: core.schemas.list(
    core.schemas.lazyObject(async () => (await import("../../../../..")).commons.PartySummary)
  ),
  suggestedGroups: core.schemas.property(
    "suggested_groups",
    core.schemas.list(core.schemas.lazyObject(async () => (await import("../../../../..")).commons.GroupSummary))
  ),
  suggestedPlayers: core.schemas.property(
    "suggested_players",
    core.schemas.list(core.schemas.lazyObject(async () => (await import("../../../../..")).commons.IdentityHandle))
  ),
  watch: core.schemas.lazyObject(async () => (await import("../../../../..")).commons.WatchResponse),
});

export declare namespace ListActivitiesOutput {
  interface Raw {
    identities: serializers.commons.IdentityHandle.Raw[];
    games: serializers.commons.GameSummary.Raw[];
    parties: serializers.commons.PartySummary.Raw[];
    suggested_groups: serializers.commons.GroupSummary.Raw[];
    suggested_players: serializers.commons.IdentityHandle.Raw[];
    watch: serializers.commons.WatchResponse.Raw;
  }
}
