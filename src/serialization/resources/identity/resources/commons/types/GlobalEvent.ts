/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { RivetApi } from "@fern-api/rivet";
import * as core from "../../../../../../core";

export const GlobalEvent: core.serialization.ObjectSchema<
    serializers.identity.GlobalEvent.Raw,
    RivetApi.identity.GlobalEvent
> = core.serialization.object({
    ts: core.serialization.lazy(async () => (await import("../../../../..")).commons.Timestamp),
    kind: core.serialization.lazy(async () => (await import("../../../../..")).identity.GlobalEventKind),
    notification: core.serialization.lazyObject(
        async () => (await import("../../../../..")).identity.GlobalEventNotification
    ),
});

export declare namespace GlobalEvent {
    interface Raw {
        ts: serializers.commons.Timestamp.Raw;
        kind: serializers.identity.GlobalEventKind.Raw;
        notification: serializers.identity.GlobalEventNotification.Raw;
    }
}
