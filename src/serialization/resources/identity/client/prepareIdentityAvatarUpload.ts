/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { RivetApi } from "@fern-api/rivet";
import * as core from "../../../../core";

export const Request: core.serialization.Schema<
    serializers.identity.prepareIdentityAvatarUpload.Request.Raw,
    RivetApi.PrepareIdentityAvatarUploadInput
> = core.serialization.object({
    path: core.serialization.string(),
    mime: core.serialization.string(),
    contentLength: core.serialization.property("content_length", core.serialization.number()),
});

export declare namespace Request {
    interface Raw {
        path: string;
        mime: string;
        content_length: number;
    }
}

export const Response: core.serialization.Schema<
    serializers.identity.prepareIdentityAvatarUpload.Response.Raw,
    RivetApi.PrepareIdentityAvatarUploadOutput
> = core.serialization.lazyObject(async () => (await import("../../..")).PrepareIdentityAvatarUploadOutput);

export declare namespace Response {
    type Raw = serializers.PrepareIdentityAvatarUploadOutput.Raw;
}
