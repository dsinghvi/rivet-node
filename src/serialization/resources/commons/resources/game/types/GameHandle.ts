/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { RivetApi } from "@fern-api/rivet";
import * as core from "../../../../../../core";

export const GameHandle: core.serialization.ObjectSchema<
    serializers.commons.GameHandle.Raw,
    RivetApi.commons.GameHandle
> = core.serialization.object({
    gameId: core.serialization.property("game_id", core.serialization.string()),
    nameId: core.serialization.property(
        "name_id",
        core.serialization.lazy(async () => (await import("../../../../..")).commons.Identifier)
    ),
    displayName: core.serialization.property(
        "display_name",
        core.serialization.lazy(async () => (await import("../../../../..")).commons.DisplayName)
    ),
    logoUrl: core.serialization.property("logo_url", core.serialization.string()),
    bannerUrl: core.serialization.property("banner_url", core.serialization.string()),
});

export declare namespace GameHandle {
    interface Raw {
        game_id: string;
        name_id: serializers.commons.Identifier.Raw;
        display_name: serializers.commons.DisplayName.Raw;
        logo_url: string;
        banner_url: string;
    }
}
