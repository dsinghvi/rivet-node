/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { RivetApi } from "@fern-api/rivet";
import * as core from "../../../../../../core";

export const GameSummary: core.schemas.ObjectSchema<serializers.commons.GameSummary.Raw, RivetApi.commons.GameSummary> =
  core.schemas.object({
    gameId: core.schemas.property("game_id", core.schemas.string()),
    nameId: core.schemas.property(
      "name_id",
      core.schemas.lazy(async () => (await import("../../../../..")).commons.Identifier)
    ),
    displayName: core.schemas.property(
      "display_name",
      core.schemas.lazy(async () => (await import("../../../../..")).commons.DisplayName)
    ),
    logoUrl: core.schemas.property("logo_url", core.schemas.string().optional()),
    bannerUrl: core.schemas.property("banner_url", core.schemas.string().optional()),
    url: core.schemas.string(),
    developer: core.schemas.lazyObject(async () => (await import("../../../../..")).commons.GroupHandle),
  });

export declare namespace GameSummary {
  interface Raw {
    game_id: string;
    name_id: serializers.commons.Identifier.Raw;
    display_name: serializers.commons.DisplayName.Raw;
    logo_url?: string | null;
    banner_url?: string | null;
    url: string;
    developer: serializers.commons.GroupHandle.Raw;
  }
}
