/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { RivetApi } from "@fern-api/rivet";
import * as core from "../../../../../../core";

export const GroupHandle: core.serialization.ObjectSchema<
    serializers.commons.GroupHandle.Raw,
    RivetApi.commons.GroupHandle
> = core.serialization.object({
    groupId: core.serialization.property("group_id", core.serialization.string()),
    displayName: core.serialization.property(
        "display_name",
        core.serialization.lazy(async () => (await import("../../../../..")).commons.DisplayName)
    ),
    avatarUrl: core.serialization.property("avatar_url", core.serialization.string()),
    external: core.serialization.lazyObject(async () => (await import("../../../../..")).commons.GroupExternalLinks),
    isDeveloper: core.serialization.property("is_developer", core.serialization.boolean().optional()),
});

export declare namespace GroupHandle {
    interface Raw {
        group_id: string;
        display_name: serializers.commons.DisplayName.Raw;
        avatar_url: string;
        external: serializers.commons.GroupExternalLinks.Raw;
        is_developer?: boolean | null;
    }
}
