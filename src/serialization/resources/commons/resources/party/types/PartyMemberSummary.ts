/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { RivetRivet } from "@fern-api/rivet";
import * as core from "../../../../../../core";

export const PartyMemberSummary: core.schemas.ObjectSchema<
  serializers.commons.PartyMemberSummary.Raw,
  RivetRivet.commons.PartyMemberSummary
> = core.schemas.object({
  identity: core.schemas.lazyObject(async () => (await import("../../../../..")).commons.IdentityHandle),
  isLeader: core.schemas.property("is_leader", core.schemas.boolean()),
  joinTs: core.schemas.property("join_ts", core.schemas.date()),
  state: core.schemas.lazy(async () => (await import("../../../../..")).commons.PartyMemberState),
});

export declare namespace PartyMemberSummary {
  interface Raw {
    identity: serializers.commons.IdentityHandle.Raw;
    is_leader: boolean;
    join_ts: string;
    state: serializers.commons.PartyMemberState.Raw;
  }
}
