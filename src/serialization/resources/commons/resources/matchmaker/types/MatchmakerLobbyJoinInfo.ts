/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../..";
import { RivetApi } from "@rivet-gg/api";
import * as core from "../../../../../../core";

export const MatchmakerLobbyJoinInfo: core.serialization.ObjectSchema<
    serializers.commons.MatchmakerLobbyJoinInfo.Raw,
    RivetApi.commons.MatchmakerLobbyJoinInfo
> = core.serialization.object({
    lobbyId: core.serialization.property("lobby_id", core.serialization.string()),
    region: core.serialization.lazyObject(
        async () => (await import("../../../../..")).commons.MatchmakerLobbyJoinInfoRegion
    ),
    ports: core.serialization.record(
        core.serialization.string(),
        core.serialization.lazyObject(async () => (await import("../../../../..")).commons.MatchmakerLobbyJoinInfoPort)
    ),
    player: core.serialization.lazyObject(
        async () => (await import("../../../../..")).commons.MatchmakerLobbyJoinInfoPlayer
    ),
});

export declare namespace MatchmakerLobbyJoinInfo {
    interface Raw {
        lobby_id: string;
        region: serializers.commons.MatchmakerLobbyJoinInfoRegion.Raw;
        ports: Record<string, serializers.commons.MatchmakerLobbyJoinInfoPort.Raw>;
        player: serializers.commons.MatchmakerLobbyJoinInfoPlayer.Raw;
    }
}
