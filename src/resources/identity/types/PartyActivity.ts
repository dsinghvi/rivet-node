/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { RivetIdentity } from "@fern-api/rivet-identity";
import * as core from "../../../core";

export type PartyActivity =
  | RivetIdentity.PartyActivity.Idle
  | RivetIdentity.PartyActivity.MatchmakerFindingLobby
  | RivetIdentity.PartyActivity.MatchmakerLobby
  | RivetIdentity.PartyActivity._Unknown;

export declare namespace PartyActivity {
  interface Idle extends _Utils {
    type: "idle";
  }

  interface MatchmakerFindingLobby extends RivetIdentity.PartyActivityMatchmakerFindingLobby, _Utils {
    type: "matchmaker_finding_lobby";
  }

  interface MatchmakerLobby extends RivetIdentity.PartyActivityMatchmakerLobby, _Utils {
    type: "matchmaker_lobby";
  }

  interface _Unknown extends _Utils {
    type: void;
  }

  interface _Utils {
    _visit: <_Result>(visitor: RivetIdentity.PartyActivity._Visitor<_Result>) => _Result;
  }

  interface _Visitor<_Result> {
    idle: () => _Result;
    matchmakerFindingLobby: (value: RivetIdentity.PartyActivityMatchmakerFindingLobby) => _Result;
    matchmakerLobby: (value: RivetIdentity.PartyActivityMatchmakerLobby) => _Result;
    _other: (value: { type: string }) => _Result;
  }
}

export const PartyActivity = {
  idle: (): RivetIdentity.PartyActivity.Idle => {
    const valueWithoutVisit: Omit<RivetIdentity.PartyActivity.Idle, "_visit"> = {
      type: "idle",
    };
    return core.addNonEnumerableProperty(valueWithoutVisit, "_visit", function <
      _Result
    >(this: RivetIdentity.PartyActivity.Idle, visitor: RivetIdentity.PartyActivity._Visitor<_Result>) {
      return RivetIdentity.PartyActivity._visit(this, visitor);
    });
  },

  matchmakerFindingLobby: (
    value: RivetIdentity.PartyActivityMatchmakerFindingLobby
  ): RivetIdentity.PartyActivity.MatchmakerFindingLobby => {
    const valueWithoutVisit: Omit<RivetIdentity.PartyActivity.MatchmakerFindingLobby, "_visit"> = {
      ...value,
      type: "matchmaker_finding_lobby",
    };
    return core.addNonEnumerableProperty(valueWithoutVisit, "_visit", function <
      _Result
    >(this: RivetIdentity.PartyActivity.MatchmakerFindingLobby, visitor: RivetIdentity.PartyActivity._Visitor<_Result>) {
      return RivetIdentity.PartyActivity._visit(this, visitor);
    });
  },

  matchmakerLobby: (value: RivetIdentity.PartyActivityMatchmakerLobby): RivetIdentity.PartyActivity.MatchmakerLobby => {
    const valueWithoutVisit: Omit<RivetIdentity.PartyActivity.MatchmakerLobby, "_visit"> = {
      ...value,
      type: "matchmaker_lobby",
    };
    return core.addNonEnumerableProperty(valueWithoutVisit, "_visit", function <
      _Result
    >(this: RivetIdentity.PartyActivity.MatchmakerLobby, visitor: RivetIdentity.PartyActivity._Visitor<_Result>) {
      return RivetIdentity.PartyActivity._visit(this, visitor);
    });
  },

  _unknown: (value: { type: string }): RivetIdentity.PartyActivity._Unknown => {
    const valueWithoutVisit = value as unknown as Omit<RivetIdentity.PartyActivity._Unknown, "_visit">;
    return core.addNonEnumerableProperty(valueWithoutVisit, "_visit", function <
      _Result
    >(this: RivetIdentity.PartyActivity._Unknown, visitor: RivetIdentity.PartyActivity._Visitor<_Result>) {
      return RivetIdentity.PartyActivity._visit(this, visitor);
    });
  },

  _visit: <_Result>(
    value: RivetIdentity.PartyActivity,
    visitor: RivetIdentity.PartyActivity._Visitor<_Result>
  ): _Result => {
    switch (value.type) {
      case "idle":
        return visitor.idle();
      case "matchmaker_finding_lobby":
        return visitor.matchmakerFindingLobby(value);
      case "matchmaker_lobby":
        return visitor.matchmakerLobby(value);
      default:
        return visitor._other(value as any);
    }
  },
} as const;
